<CustomBehavior File="RunCode" Type="Definition"><![CDATA[
	public class AzyulGPHTracker
		{
			private static double startingGold = Convert.ToDouble(StyxWoW.Me.Copper);
			private static long startingTime = (DateTime.Now.Ticks / TimeSpan.TicksPerSecond);
			private static double bagItemsWorth = 0;
			private static List<WoWGuid> blacklistItems = new List<WoWGuid>();



			public static void LogGPH()
			{
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.Gold, "[Azyul GPH Tracker]: ", System.Windows.Media.Colors.LightGoldenrodYellow, "GPH: " + GPHString());
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.Gold, "[Azyul GPH Tracker]: ", System.Windows.Media.Colors.LightGoldenrodYellow, "GPH+Bag: " + GPHBagString());
			}

			public static string GPHString()
			{
				double _currentGold = Convert.ToDouble(StyxWoW.Me.Copper);
				double _elapsedTime = Convert.ToDouble((DateTime.Now.Ticks / TimeSpan.TicksPerSecond) - startingTime);
				double _diffGold = (_currentGold - startingGold);
				double _gphRaw = (_diffGold*(3600/_elapsedTime));
				string _gphString = Lua.GetReturnVal<string>($"return GetCoinText({_gphRaw})", 0);

				return _gphString;
			}

			public static string GPHBagString()
			{
				double _currentGold = Convert.ToDouble(StyxWoW.Me.Copper);
				double _elapsedTime = Convert.ToDouble((DateTime.Now.Ticks / TimeSpan.TicksPerSecond) - startingTime);
				double _diffGoldBags = (_currentGold - startingGold) + BagItemWorth();
				double _gphBagsRaw = (_diffGoldBags*(3600/_elapsedTime));
				string _gphBagsString = Lua.GetReturnVal<string>($"return GetCoinText({_gphBagsRaw})", 0);

				return _gphBagsString;
			}

			public static double BagItemWorth()
			{
				double bagItemsWorth = 0;
				foreach (WoWItem i in StyxWoW.Me.BagItems)
				{
					if (i != null && i.ItemInfo.SellPrice != 0 && !blacklistItems.Contains(i.Guid))
						bagItemsWorth += i.ItemInfo.SellPrice;
				}
				return bagItemsWorth;
			}

			public static void BlacklistBagItems()
			{
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.Gold, "[Azyul GPH Tracker]: ", System.Windows.Media.Colors.LightGoldenrodYellow, "Excluding current bag items from GPH tracker.");
				foreach (WoWItem i in StyxWoW.Me.BagItems)
				{
					if (i != null) 
					{
						blacklistItems.Add(i.Guid);
					}
				}
			}

			public static void ResetGPHTracker()
			{
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.Gold, "[Azyul GPH Tracker]: ", System.Windows.Media.Colors.LightGoldenrodYellow, "Resetting GPH tracker since you deposited gold! Any GPH value outputs after this won't be accurate!");
				blacklistItems.Clear();
				BlacklistBagItems();
				startingGold = 0;
				startingGold = Convert.ToDouble(StyxWoW.Me.Copper);
				startingTime = (DateTime.Now.Ticks / TimeSpan.TicksPerSecond);
			}

	}
	]]>
</CustomBehavior>

<CustomBehavior File="RunCode" Code="AzyulGPHTracker.BlacklistBagItems();" />

<CustomBehavior File="RunCode" Type="Definition"><![CDATA[
	public class InstanceTimer
		{
			private static System.Diagnostics.Stopwatch Timer = new System.Diagnostics.Stopwatch();

			public static void StartTimer()
			{
				if (Timer.IsRunning) {
					Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.DeepSkyBlue, "[Azyul]: ", System.Windows.Media.Colors.LightGreen, "Resetting timer since it's already running!");
					Timer.Reset();
				}
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.DeepSkyBlue, "[Azyul]: ", System.Windows.Media.Colors.LightGreen, "Instance timer started.");
				Timer.Start();
			}

			public static async Task WaitForTimeAsync(TimeSpan time)
			{
				Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.DeepSkyBlue, "[Azyul]: ", System.Windows.Media.Colors.LightGreen, "Your dungeon run took: " + Timer.Elapsed.ToString());

				if (Timer.Elapsed > time) {
					Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.DeepSkyBlue, "[Azyul]: ", System.Windows.Media.Colors.LightGreen, "Not waiting since the run was over the wait time.");
				}

				while (Timer.Elapsed < time && Timer.ElapsedMilliseconds != 0)
				{
					Bots.Professionbuddy.PBLog.Log(System.Windows.Media.Colors.DeepSkyBlue, "[Azyul]: ", System.Windows.Media.Colors.LightGreen, "Waiting to prevent dungeon timeout: " + Timer.Elapsed.ToString() + " of " + time.ToString());
					await Coroutine.Sleep(5000);
				}

				Timer.Reset();
			}
	}
	]]>
</CustomBehavior>

